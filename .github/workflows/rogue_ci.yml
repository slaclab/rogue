# ----------------------------------------------------------------------------
# Title      : ROGUE GitHub Actions Script
# ----------------------------------------------------------------------------
# This file is part of the rogue software package. It is subject to
# the license terms in the LICENSE.txt file found in the top-level directory
# of this distribution and at:
#    https://confluence.slac.stanford.edu/display/ppareg/LICENSE.html.
# No part of the rogue software package, including this file, may be
# copied, modified, propagated, or distributed except according to the terms
# contained in the LICENSE.txt file.
# ----------------------------------------------------------------------------
# The following environment variables are required for this process:
# secrets.GH_TOKEN
# secrets.CONDA_UPLOAD_TOKEN_DEV
# secrets.CONDA_UPLOAD_TOKEN_TAG
# secrets.DOCKERHUB_TOKEN

name: Rogue Integration
on: [push]

jobs:
  full_build_test:
    name: Full Build Test
    runs-on: ubuntu-22.04
    steps:

      # This step checks out a copy of your repository.
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Setup Environment
        run: |
          EPICS_BASE=${HOME}/packages/epics/base-7.0.3
          EPICS_PCAS_ROOT=${HOME}/packages/pcas/pcas-4.13.2
          LD_LIBRARY_PATH=/usr/lib:${EPICS_BASE}/lib/linux-x86_64:${EPICS_PCAS_ROOT}/lib/linux-x86_64
          echo "EPICS_BASE=$EPICS_BASE" >> $GITHUB_ENV
          echo "EPICS_PCAS_ROOT=$EPICS_PCAS_ROOT" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install doxygen doxygen-doc libzmq3-dev libboost-all-dev
          python -m pip install --upgrade pip
          pip install setuptools
          pip install -r pip_requirements.txt
          pip install codecov coverage pytest-cov flake8

      - name: Install EPICS Base
        run: |
          mkdir -p ${EPICS_BASE}
          cd ${EPICS_BASE}
          pwd
          wget -O base-7.0.3.tar.gz  https://github.com/epics-base/epics-base/archive/R7.0.3.tar.gz
          tar xzf base-7.0.3.tar.gz --strip 1
          make clean && make && make install

      - name: Install EPICS PCAS
        run: |
          mkdir -p ${EPICS_PCAS_ROOT}
          cd ${EPICS_PCAS_ROOT}
          wget -O pcas-4.13.2.tar.gz https://github.com/epics-modules/pcas/archive/v4.13.2.tar.gz
          tar xzf pcas-4.13.2.tar.gz --strip 1
          echo "EPICS_BASE=$EPICS_BASE" >> configure/RELEASE.local
          make clean && make && make install

      # Rogue
      - name: Build Rogue
        run: |
          python -c "import numpy; print(numpy.get_include())"
          mkdir build; cd build
          cmake .. -DROGUE_INSTALL=local
          make -j4 install

      # Run Tests
      - name: Rogue Tests
        run: |
          source setup_rogue.sh
          python -m pytest --cov

      # Flake 8 check
      - name: Flake8 Tests
        run: |
          source setup_rogue.sh
          python -m compileall -f ./python/
          #flake8 --count ./python/

  small_build_test:
    name: Small Build Test
    runs-on: ubuntu-22.04
    steps:

      # This step checks out a copy of your repository.
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libzmq3-dev

      # Rogue
      - name: Build Rogue
        run: |
          mkdir build; cd build
          cmake .. -DROGUE_INSTALL=local -DNO_PYTHON=1 -DSTATIC_LIB=1
          make -j4 install

  gen_release:
    name: Generate Release
    runs-on: ubuntu-22.04
    needs: [full_build_test, small_build_test]
    if: startsWith(github.ref, 'refs/tags/')
    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Get Image Information
        id: get_image_info
        run: |
          echo ::set-output name=tag::`git describe --tags`

      - name: Get Ruckus
        run: |
          git clone https://github.com/slaclab/ruckus.git
          python -m pip install --upgrade pip
          pip install -r ruckus/scripts/pip_requirements.txt

      - name: Gen Release
        env:
          TRAVIS_REPO_SLUG: ${{ github.repository }}
          TRAVIS_TAG: ${{ steps.get_image_info.outputs.tag }}
          GH_REPO_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          python ruckus/scripts/releaseGen.py

